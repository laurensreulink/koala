from PySide2 import QtGui
from PySide2 import QtCore
from PySide2 import QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1071, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(1300, 800))
        MainWindow.setToolTipDuration(-1)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1071, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuPreprocess = QtWidgets.QMenu(self.menuBar)
        self.menuPreprocess.setObjectName("menuPreprocess")
        self.menuEvaluate_Model = QtWidgets.QMenu(self.menuBar)
        self.menuEvaluate_Model.setObjectName("menuEvaluate_Model")
        self.menuQuick_Train = QtWidgets.QMenu(self.menuBar)
        self.menuQuick_Train.setObjectName("menuQuick_Train")
        self.menuTrain = QtWidgets.QMenu(self.menuBar)
        self.menuTrain.setObjectName("menuTrain")
        self.menuPredict = QtWidgets.QMenu(self.menuBar)
        self.menuPredict.setObjectName("menuPredict")
        self.menuEdit = QtWidgets.QMenu(self.menuBar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionHome = QtWidgets.QAction(MainWindow)
        self.actionHome.setObjectName("actionHome")
        self.actionClassifier = QtWidgets.QAction(MainWindow)
        self.actionClassifier.setObjectName("actionClassifier")
        self.actionRegressor = QtWidgets.QAction(MainWindow)
        self.actionRegressor.setObjectName("actionRegressor")
        self.actionClassifier_2 = QtWidgets.QAction(MainWindow)
        self.actionClassifier_2.setObjectName("actionClassifier_2")
        self.actionRegressor_2 = QtWidgets.QAction(MainWindow)
        self.actionRegressor_2.setObjectName("actionRegressor_2")
        self.actionClassifier_q = QtWidgets.QAction(MainWindow)
        self.actionClassifier_q.setObjectName("actionClassifier_q")
        self.actionRegressor_q = QtWidgets.QAction(MainWindow)
        self.actionRegressor_q.setObjectName("actionRegressor_q")
        self.actionStart = QtWidgets.QAction(MainWindow)
        self.actionStart.setObjectName("actionStart")
        self.actionClassifier_4 = QtWidgets.QAction(MainWindow)
        self.actionClassifier_4.setObjectName("actionClassifier_4")
        self.actionRegressor_4 = QtWidgets.QAction(MainWindow)
        self.actionRegressor_4.setObjectName("actionRegressor_4")
        self.actionParameter_Selection = QtWidgets.QAction(MainWindow)
        self.actionParameter_Selection.setObjectName("actionParameter_Selection")
        self.actionSelect_Model = QtWidgets.QAction(MainWindow)
        self.actionSelect_Model.setObjectName("actionSelect_Model")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionClassifier_5 = QtWidgets.QAction(MainWindow)
        self.actionClassifier_5.setObjectName("actionClassifier_5")
        self.actionRegression = QtWidgets.QAction(MainWindow)
        self.actionRegression.setObjectName("actionRegression")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionInfo = QtWidgets.QAction(MainWindow)
        self.actionInfo.setObjectName("actionInfo")
        self.menuFile.addAction(self.actionHome)
        self.menuPreprocess.addSeparator()
        self.menuPreprocess.addAction(self.actionStart)
        self.menuEvaluate_Model.addAction(self.actionClassifier_2)
        self.menuEvaluate_Model.addAction(self.actionRegressor_2)
        self.menuEvaluate_Model.addSeparator()
        self.menuEvaluate_Model.addAction(self.actionParameter_Selection)
        self.menuQuick_Train.addAction(self.actionClassifier_q)
        self.menuQuick_Train.addAction(self.actionRegressor_q)
        self.menuTrain.addAction(self.actionClassifier_4)
        self.menuTrain.addAction(self.actionRegressor_4)
        self.menuPredict.addAction(self.actionSelect_Model)
        self.menuPredict.addSeparator()
        self.menuPredict.addAction(self.actionClassifier_5)
        self.menuPredict.addAction(self.actionRegression)
        self.menuEdit.addAction(self.actionUndo)
        self.menuHelp.addAction(self.actionInfo)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuEdit.menuAction())
        self.menuBar.addAction(self.menuQuick_Train.menuAction())
        self.menuBar.addAction(self.menuPreprocess.menuAction())
        self.menuBar.addAction(self.menuEvaluate_Model.menuAction())
        self.menuBar.addAction(self.menuTrain.menuAction())
        self.menuBar.addAction(self.menuPredict.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Koala"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuPreprocess.setTitle(_translate("MainWindow", "Preprocess"))
        self.menuEvaluate_Model.setTitle(_translate("MainWindow", "Evaluate Model"))
        self.menuQuick_Train.setTitle(_translate("MainWindow", "Quick Train"))
        self.menuTrain.setTitle(_translate("MainWindow", "Train"))
        self.menuPredict.setTitle(_translate("MainWindow", "Predict"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionHome.setText(_translate("MainWindow", "Home"))
        self.actionClassifier.setText(_translate("MainWindow", "Classifier"))
        self.actionRegressor.setText(_translate("MainWindow", "Regressor"))
        self.actionClassifier_2.setText(_translate("MainWindow", "Classifier"))
        self.actionRegressor_2.setText(_translate("MainWindow", "Regressor"))
        self.actionClassifier_q.setText(_translate("MainWindow", "Classifier"))
        self.actionRegressor_q.setText(_translate("MainWindow", "Regressor"))
        self.actionStart.setText(_translate("MainWindow", "Start"))
        self.actionClassifier_4.setText(_translate("MainWindow", "Classifier"))
        self.actionRegressor_4.setText(_translate("MainWindow", "Regressor"))
        self.actionParameter_Selection.setText(_translate("MainWindow", "Parameter Selection"))
        self.actionSelect_Model.setText(_translate("MainWindow", "Select Model"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionClassifier_5.setText(_translate("MainWindow", "Classifier Predictions"))
        self.actionRegression.setText(_translate("MainWindow", "Regression Predictions"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionInfo.setText(_translate("MainWindow", "Info"))

    def showwarning(self):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)

        msg.setText("This action will stop the process, all progress will be lost.")
        msg.setInformativeText("Are you sure you want to leave this page?")
        msg.setWindowTitle("Warning!")
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)
        msg.exec_()
        return True

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

